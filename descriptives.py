# -*- coding: utf-8 -*-
"""Descriptives.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rnGM_jgyrQbChC3u1Eqm2Tzms_ABVvho
"""

try:
  from google.colab import drive
  IN_COLAB=True
except:
  IN_COLAB=False

if IN_COLAB:
  print("We're running Colab")

# Commented out IPython magic to ensure Python compatibility.
if IN_COLAB:
  # Mount the Google Drive at mount
  mount='/content/gdrive'
  print("Colab: mounting Google drive on ", mount)

  drive.mount(mount)

  # Switch to the directory on the Google Drive that you want to use
  import os
  drive_root = mount + "/My Drive/Thesis/Code/Descriptives"
  
  # Create drive_root if it doesn't exist
  create_drive_root = True
  if create_drive_root:
    print("\nColab: making sure ", drive_root, " exists.")
    os.makedirs(drive_root, exist_ok=True)
  
  # Change to the directory
  print("\nColab: Changing directory to ", drive_root)
#   %cd $drive_root

import pandas as pd

#Take the processed data from the Pre-Processing files
#The two files below are pre-processed data (without years of match_counts)
Prc_49 = pd.read_csv("/content/gdrive/My Drive/Thesis/Code/Pre-processing/Processed1949.csv")
prc_20 = pd.read_csv("/content/gdrive/My Drive/Thesis/Code/Pre-processing/Processed2000.csv")

Prc_49.columns = ["5_gram"]
prc_20.columns = ["5_gram"]

#The two files below are processed 5-grams, but still show years and match_counts
OG_49 = pd.read_csv("/content/gdrive/My Drive/Thesis/Code/Pre-processing/PRC_year_49.csv")
OG_20 = pd.read_csv("/content/gdrive/My Drive/Thesis/Code/Pre-processing/PRC_year_20.csv")

#Below is the namefile
names = open("/content/gdrive/My Drive/Thesis/Code/Pre-processing/Names_processed.txt", "r")
names = list(names.read().split("\n"))
names.append("elizabeth")
names.append("isabella")

print(len(names))

#Showing the frequency counts per year
#1949
years_49 = {}
for ind in OG_49.index:
    year = OG_49["Year"][ind]
    matchcount = OG_49["Match_count"][ind]
    if year in years_49:
        years_49[year] = years_49[year] + matchcount
    else:
        years_49[year] = matchcount

#2000        
years_20 = {}
for ind in OG_20.index:
    year = OG_20["Year"][ind]
    matchcount = OG_20["Match_count"][ind]
    if year in years_20:
        years_20[year] = years_20[year] + matchcount
    else:
        years_20[year] = matchcount

import matplotlib.pyplot as plt

keys = years_49.keys()
values = years_49.values()

plt.bar(keys, values)
plt.savefig('Frequency over years pre 1950.png')
plt.show()

import matplotlib.pyplot as plt

keys2 = years_20.keys()
values2 = years_20.values()

plt.bar(keys2, values2)
plt.savefig('Frequency over years post 1950.png')

freqnames_20 = {}
for ind in OG_20.index:
    matchcount = OG_20["Match_count"][ind]
    text = OG_20["5_gram"]
    for i in text:
        for name in names:
            
            if name in i:
                if i in freqnames_20:
                
                    freqnames_20[name] = freqnames_20[name] + matchcount
                else:
                    freqnames_20[name] = matchcount
            else:
                pass

print(len(freqnames_20.keys()))
print(len(freqnames_49.keys()))

import matplotlib.pyplot as plt

keys = freqnames_20.keys()
values = freqnames_20.values()

plt.bar(keys, values)
plt.savefig('Frequency over years post 1950 (names).png')

freqnames_49 = {}
for ind in OG_49.index:
    matchcount = OG_49["Match_count"][ind]
    text = OG_49["5_gram"]
    for i in text:
        for name in names:
            
            if name in i:
                if i in freqnames_49:
                
                    freqnames_49[name] = freqnames_49[name] + matchcount
                else:
                    freqnames_49[name] = matchcount
            else:
                pass

import matplotlib.pyplot as plt

keys = freqnames_49.keys()
values = freqnames_49.values()

plt.bar(keys, values)
plt.savefig('Frequency over years pre 1950 (names).png')

woman_freq_49 = {}
man_freq_49 = {}
woman = ["elizabeth", "isabella"]

for ind in OG_49.index:
    matchcount = OG_49["Match_count"][ind]
    text = OG_49["5_gram"]
    for i in text:
        for name in names:
            if name in i:
                if name in woman:
                    if name in woman_freq_49:
                        woman_freq_49[name] = woman_freq_49[name] + matchcount
                    else:
                        woman_freq_49[name] = [matchcount]
                else:
                    if name in man_freq_49:
                        man_freq_49[name] = man_freq_49[name] + matchcount
                    else:
                        man_freq_49[name] = matchcount
            else:
                pass
woman49df = pd.DataFrame(woman_freq_49, index=[0])
man49df = pd.DataFrame(man_freq_49, index=[0])

woman49df.to_csv('womanfreqpre1950.csv', index = False)
man49df.to_csv("manfreqpre1950.csv", index = False)

#Average token length:

lengths_1949 = []
lengths_2000 = []

for ind in Prc_49.index:
    text = Prc_49["5_gram"][ind]
    length = len(text)
    lengths_1949.append(int(length))

for ind in prc_20.index:
  text = prc_20["5_gram"][ind]
  length = len(text)
  lengths_2000.append(int(length))

average_length = []

total = 0
for i in lengths_1949:
  total += i

avg = total / len(lengths_1949)
avg_set = ["1949", avg]
average_length.append(avg_set)

total2 = 0
for y in lengths_2000:
  total += y


avg_2 = total2 / len(lengths_2000)
avg_set2 = ["2000", avg_2]
average_length.append(avg_set2)

avgdf = pd.DataFrame(average_length)
avgdf.to_csv("average_5_gram_length.csv", index = False)

total2 = 0
for y in lengths_2000:
  total2 += y


avg_2 = total2 / len(lengths_2000)
avg_set2 = ["2000", avg_2]
average_length.append(avg_set2)

average_length